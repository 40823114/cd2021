<h1>主頁</h1>
<p>個人倉儲:<a href="https://github.com/40823114/cd2021.git">https://github.com/40823114/cd2021.git</a></p>
<p>小組倉儲:<a href="https://github.com/40823146/stage1-ag16">https://github.com/40823146/stage1-ag16</a></p>
<p>小組網站:<a href="https://40823114.github.io/stage1-ag16">https://40823146.github.io/stage1-ag16</a></p>
<h1>stage1-ag16</h1>
<h2>題目</h2>
<p><span>stage1-ag16</span><br/><span>題目：電風扇</span><br/><span>動機：因為天氣變熱了</span><br/><span>W2:繪製零件</span><br/><span>W3:使用Coppeliasim模擬動作並除錯</span><br/><span>W4:報告</span></p>
<h2>W2進度</h2>
<p><span>各部位零件</span></p>
<p><span>風扇</span></p>
<p><img alt="" height="514" src="/images/風扇.jpg" width="1000"/></p>
<p>網蓋</p>
<p><img alt="" height="513" src="/images/前網蓋.jpg" width="1000"/></p>
<p>軸</p>
<p><img alt="" height="512" src="/images/軸.jpg" width="1000"/></p>
<p>馬達</p>
<p><img alt="" height="513" src="/images/馬達.jpg" width="1000"/></p>
<p>底座</p>
<p><img alt="" height="513" src="/images/底座.jpg" width="1000"/></p>
<h2>W3進度</h2>
<p>組合</p>
<p><br/><img alt="" height="512" src="/images/電風扇.jpg" width="1000"/><br/><br/><br/><span></span></p>
<h2>製圖過程</h2>
<p><span>畫的時候忘記錄 所以用隱藏回放</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/MKxoqHTIJEY" width="560"></iframe></p>
<p><span>組裝過程忘記錄 所以同心軸是已經處理好的</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/m_txLI59nq4" width="560"></iframe></span><span></span></p>
<h2>問題修正</h2>
<p>馬達與底座連接處沒有選取面，頭沒辦法旋轉，所以多加一段圓柱當主軸。</p>
<p><img alt="" height="516" src="/images/修正1.jpg" width="1000"/></p>
<h1>stage2-ag9</h1>
<h2>題目</h2>
<p><span>stage2-ag9</span><br/><span>題目：旋轉木馬音樂盒</span><br/><span>W5:繪製零件</span><br/><span>W6~8:使用Coppeliasim模擬動作並除錯</span><br/><span>W9:報告</span></p>
<p>我負責繪製所有零件及組合圖，齒輪為Solidwork內建。</p>
<h2>W5進度</h2>
<p>齒輪箱</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/W9A1Jn5drKk" width="560"></iframe></p>
<p>連桿1</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/78grlCHElkE" width="560"></iframe></p>
<p>連桿2</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Rlip7dLG7uU" width="560"></iframe></p>
<h2>W6進度</h2>
<p>輪子</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/CYlngGQPzgs" width="560"></iframe></p>
<p>連桿軸</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5lYiA5mekx8" width="560"></iframe></p>
<p>底座2</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_07-QpyfEIU" width="560"></iframe></p>
<p>上主軸2</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/m5JKsyPWzMM" width="560"></iframe></p>
<h2>W7進度</h2>
<p>底座2更新</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rxllYBTJLbk" width="560"></iframe></p>
<p>上主軸2更新</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/mNDJneElV0k" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gBnPimxnt2I" width="560"></iframe></p>
<h2>W8進度</h2>
<p>馬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/vKyGof5Wzk0" width="560"></iframe></p>
<h2>W9進度</h2>
<p>報告</p>
<p>組合圖沒有錄影</p>
<p>模擬失敗</p>
<p>模擬影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/cSTjKB_MVNQ" width="560"></iframe></p>
<h2>問題整理</h2>
<p>針對繪圖部分整理。</p>
<p>題目很早就決定好了，但是結構設計參考網路資料後，沒有達到預期的成效。</p>
<p>外型，尺寸拿捏都需要再加強。</p>
<p>結構沒辦法配合CoppeliaSim的物理碰撞做出有效的運動。</p>
<h1>stage3-ag4</h1>
<h2>直播內容</h2>
<p><a href="https://youtu.be/ELGSM1EytFY">https://youtu.be/ELGSM1EytFY</a></p>
<h2>RoboDK</h2>
<p>修改座標和數字 讓他來回</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/TkSk4zgq-5Y" width="560"></iframe><code class="py comments"><br/></code></p>
<div class="line number1 index0 alt2"><code class="py comments"></code></div>
<div class="line number1 index0 alt2">
<div class="line number1 index0 alt2">
<div class="line number1 index0 alt2"></div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># KMOLab Portable RoboDK pick and place
from robolink import *    # API to communicate with robodk
from robodk import *      # robodk robotics toolbox
 
# Setup global parameters
BALL_DIAMETER = 100 # diameter of one ball
APPROACH = 100      # approach distance to grab each part, in mm
nTCPs = 6           # number of TCP's in the tool
 
#----------------------------------------------
# Function definitions
 
def box_calc(BALLS_SIDE=4, BALLS_MAX=None):
    """Calculate a list of points (ball center) as if the balls were stored in a box"""
    if BALLS_MAX is None: BALLS_MAX = BALLS_SIDE**3
    xyz_list = []
    for h in range(BALLS_SIDE):
        for i in range(BALLS_SIDE):
            for j in range(BALLS_SIDE):
                xyz_list = xyz_list + [[(i+0.5)*BALL_DIAMETER, (j+0.5)*BALL_DIAMETER, (h+0.5)*BALL_DIAMETER]]
                if len(xyz_list) &gt;= BALLS_MAX:
                    return xyz_list
    return xyz_list
 
def pyramid_calc(BALLS_SIDE=4):
    """Calculate a list of points (ball center) as if the balls were place in a pyramid"""
    #the number of balls can be calculated as: int(BALLS_SIDE*(BALLS_SIDE+1)*(2*BALLS_SIDE+1)/6)
    BALL_DIAMETER = 100
    xyz_list = []
    sqrt2 = 2**(0.5)
    for h in range(BALLS_SIDE):
        for i in range(BALLS_SIDE-h):
            for j in range(BALLS_SIDE-h):
                height = h*BALL_DIAMETER/sqrt2 + BALL_DIAMETER/2
                xyz_list = xyz_list + [[i*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, j*BALL_DIAMETER + (h+1)*BALL_DIAMETER*0.5, height]]
    return xyz_list
 
def balls_setup(frame, positions):
    """Place a list of balls in a reference frame. The reference object (ball) must have been previously copied to the clipboard."""
    nballs = len(positions)
    step = 1.0/(nballs - 1)
    for i in range(nballs):
        newball = frame.Paste()
        newball.setName('ball ' + str(i)) #set item name
        newball.setPose(transl(positions[i])) #set item position with respect to parent
        newball.setVisible(True, False) #make item visible but hide the reference frame
        newball.Recolor([1-step*i, step*i, 0.2, 1]) #set RGBA color
 
def cleanup_balls(parentnodes):
    """Delete all child items whose name starts with \"ball\", from the provided list of parent items."""
    todelete = []
    for item in parentnodes:
        todelete = todelete + item.Childs()
 
    for item in todelete:
        if item.Name().startswith('ball'):
            item.Delete()
 
def TCP_On(toolitem, tcp_id):
    """Attach the closest object to the toolitem Htool pose,
    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_On)"""
    toolitem.AttachClosest()
    toolitem.RDK().RunMessage('Set air valve %i on' % (tcp_id+1))
    toolitem.RDK().RunProgram('TCP_On(%i)' % (tcp_id+1));
         
def TCP_Off(toolitem, tcp_id, itemleave=0):
    """Detaches the closest object attached to the toolitem Htool pose,
    furthermore, it will output appropriate function calls on the generated robot program (call to TCP_Off)"""
    toolitem.DetachAll(itemleave)
    toolitem.RDK().RunMessage('Set air valve %i off' % (tcp_id+1))
    toolitem.RDK().RunProgram('TCP_Off(%i)' % (tcp_id+1));
 
 
#----------------------------------------------------------
# The program starts here:
 
# Any interaction with RoboDK must be done through RDK:
RDK = Robolink(robodk_path="C:/robodk/bin/RoboDK.exe", robodk_ip='127.0.0.1')
 
# Turn off automatic rendering (faster)
RDK.Render(False)
 
#RDK.Set_Simulation_Speed(500); # set the simulation speed
 
# Gather required items from the station tree
robot = RDK.Item('Fanuc M-710iC/50')
robot_tools = robot.Childs()
#robottool = RDK.Item('MainTool')
frame1 = RDK.Item('Table 1')
frame2 = RDK.Item('Table 2')
 
# Copy a ball as an object (same as CTRL+C)
ballref = RDK.Item('reference ball')
ballref.Copy()
 
# Run a pre-defined station program (in RoboDK) to replace the two tables
prog_reset = RDK.Item('Replace objects')
prog_reset.RunProgram()
 
# Call custom procedure to remove old objects
cleanup_balls([frame1, frame2])
 
# Make a list of positions to place the objects
frame1_list = pyramid_calc(4)
frame2_list = pyramid_calc(4)
 
# Programmatically place the objects with a custom-made procedure
balls_setup(frame1, frame1_list)
 
# Delete previously generated tools
for tool in robot_tools:
    if tool.Name().startswith('TCP'):
        tool.Delete()
         
# Calculate tool frames for the suction cup tool of 6 suction cups
TCP_list = []
for i in range(nTCPs):
    TCPi_pose = transl(0,0,100)*rotz((360/nTCPs)*i*pi/180)*transl(125,0,0)*roty(pi/2)
    TCPi = robot.AddTool(TCPi_pose, 'TCP %i' % (i+1))
    TCP_list.append(TCPi)
 
TCP_0 = TCP_list[0]
 
# Turn on automatic rendering
RDK.Render(True)
 
# Move balls    
robot.setPoseTool(TCP_list[0])
nballs_frame1 = len(frame1_list)
nballs_frame2 = len(frame2_list)
idTake = nballs_frame1 - 1
idLeave = 0
idTCP = 0
target_app_frame = transl(2*BALL_DIAMETER, 2*BALL_DIAMETER, 4*BALL_DIAMETER)*roty(pi)*transl(0,0,-APPROACH)
 
while idTake &gt;= 0:
    # ------------------------------------------------------------------
    # first priority: grab as many balls as possible
    # the tool is empty at this point, so take as many balls as possible (up to a maximum of 6 -&gt; nTCPs)
    ntake = min(nTCPs, idTake + 1)
 
    # approach to frame 1
    robot.setPoseFrame(frame1)
    robot.setPoseTool(TCP_0)
    robot.MoveJ([0,0,0,0,10,-200])
    robot.MoveJ(target_app_frame)
 
    # grab ntake balls from frame 1
    for i in range(ntake):
        TCPi = TCP_list[i]
        robot.setPoseTool(TCPi)
        # calculate target wrt frame1: rotation about Y is needed since Z and X axis are inverted
        target = transl(frame1_list[idTake])*roty(pi)*rotx(30*pi/180)
        target_app = target*transl(0,0,-APPROACH)
        idTake = idTake - 1       
        robot.MoveL(target_app)
        robot.MoveL(target)
        TCP_On(TCPi, i)
        robot.MoveL(target_app)
  
    # ------------------------------------------------------------------
    # second priority: unload the tool     
    # approach to frame 2 and place the tool balls into table 2
    robot.setPoseTool(TCP_0)
    robot.MoveJ(target_app_frame)
    robot.MoveJ([0,0,0,0,10,-200])
    robot.setPoseFrame(frame2)    
    robot.MoveJ(target_app_frame)
    for i in range(ntake):
        TCPi = TCP_list[i]
        robot.setPoseTool(TCPi)
        if idLeave &gt; nballs_frame2-1:
            raise Exception("No room left to place objects in Table 2")
         
        # calculate target wrt frame1: rotation of 180 about Y is needed since Z and X axis are inverted
        target = transl(frame2_list[idLeave])*roty(pi)*rotx(30*pi/180)
        target_app = target*transl(0,0,-APPROACH)
        idLeave = idLeave + 1       
        robot.MoveL(target_app)
        robot.MoveL(target)
        TCP_Off(TCPi, i, frame2)
        robot.MoveL(target_app)
 
    robot.MoveJ(target_app_frame)
 
# Move home when the robot finishes
robot.MoveJ([0,0,0,0,10,-200])
 
 
 
# Gather required items from the station tree
robot = RDK.Item('Fanuc M-710iC/50')
robot_tools = robot.Childs()
#robottool = RDK.Item('MainTool')
frame1 = RDK.Item('Table 1')
frame2 = RDK.Item('Table 2')
 
 
 
# Call custom procedure to remove old objects
cleanup_balls([frame1 , frame2])
 
 
# Make a list of positions to place the objects
frame1_list = pyramid_calc(4)
frame2_list = pyramid_calc(4)
 
# Programmatically place the objects with a custom-made procedure
balls_setup(frame2, frame2_list)
 
# Delete previously generated tools
for tool in robot_tools:
    if tool.Name().startswith('TCP'):
        tool.Delete()
         
# Calculate tool frames for the suction cup tool of 6 suction cups
TCP_list = []
for i in range(nTCPs):
    TCPi_pose = transl(0,0,100)*rotz((360/nTCPs)*i*pi/180)*transl(125,0,0)*roty(pi/2)
    TCPi = robot.AddTool(TCPi_pose, 'TCP %i' % (i+1))
    TCP_list.append(TCPi)
 
TCP_0 = TCP_list[0]
 
 
 
# Move balls    
robot.setPoseTool(TCP_list[0])
nballs_frame2 = len(frame2_list)
nballs_frame1 = len(frame1_list)
idTake = nballs_frame2 - 1
idLeave = 0
idTCP = 0
target_app_frame = transl(2*BALL_DIAMETER, 2*BALL_DIAMETER, 4*BALL_DIAMETER)*roty(pi)*transl(0,0,-APPROACH)
 
while idTake &gt;= 0:
    # ------------------------------------------------------------------
    # first priority: grab as many balls as possible
    # the tool is empty at this point, so take as many balls as possible (up to a maximum of 6 -&gt; nTCPs)
    ntake = min(nTCPs, idTake + 1)
 
    # approach to frame 1
    robot.setPoseFrame(frame2)
    robot.setPoseTool(TCP_0)
    robot.MoveJ([0,0,0,0,10,-200])
    robot.MoveJ(target_app_frame)
 
    # grab ntake balls from frame 1
    for i in range(ntake):
        TCPi = TCP_list[i]
        robot.setPoseTool(TCPi)
        # calculate target wrt frame1: rotation about Y is needed since Z and X axis are inverted
        target = transl(frame2_list[idTake])*roty(pi)*rotx(30*pi/180)
        target_app = target*transl(0,0,-APPROACH)
        idTake = idTake - 1       
        robot.MoveL(target_app)
        robot.MoveL(target)
        TCP_On(TCPi, i)
        robot.MoveL(target_app)
  
    # ------------------------------------------------------------------
    # second priority: unload the tool     
    # approach to frame 2 and place the tool balls into table 2
    robot.setPoseTool(TCP_0)
    robot.MoveJ(target_app_frame)
    robot.MoveJ([0,0,0,0,10,-200])
    robot.setPoseFrame(frame1)    
    robot.MoveJ(target_app_frame)
    for i in range(ntake):
        TCPi = TCP_list[i]
        robot.setPoseTool(TCPi)
        if idLeave &gt; nballs_frame2-1:
            raise Exception("No room left to place objects in Table 2")
         
        # calculate target wrt frame1: rotation of 180 about Y is needed since Z and X axis are inverted
        target = transl(frame1_list[idLeave])*roty(pi)*rotx(30*pi/180)
        target_app = target*transl(0,0,-APPROACH)
        idLeave = idLeave + 1       
        robot.MoveL(target_app)
        robot.MoveL(target)
        TCP_Off(TCPi, i, frame2)
        robot.MoveL(target_app)
 
    robot.MoveJ(target_app_frame)
 
# Move home when the robot finishes
robot.MoveJ([0,0,0,0,10,-200])</pre>
<br/>
<h2>W13~W14</h2>
<h3>task1</h3>
<p></p>
<p>stage3_ag1 | <a href="https://40823131.github.io/stage3-ag1">website</a> | <a href="https://github.com/40823131/stage3-ag1">github</a></p>
<p>40823131 | Website:<a href="https://40823131.github.io/cd2021">40823131</a> | Repository:<a href="https://github.com/40823131/cd2021">40823131</a> | Group Website:<a href="https://40823131.github.io/stage3-ag1">40823131</a></p>
<p>40823112 | Website:<a href="https://40823112.github.io/cd2021">40823112</a> | Repository:<a href="https://github.com/40823112/cd2021">40823112</a> | Group Website:<a href="https://40823112.github.io/stage3-ag1">40823112</a></p>
<p>40823123 | Website:<a href="https://40823123.github.io/cd2021">40823123</a> | Repository:<a href="https://github.com/40823123/cd2021">40823123</a> | Group Website:<a href="https://40823123.github.io/stage3-ag1">40823123</a></p>
<p>40823145 | Website:<a href="https://40823145.github.io/cd2021">40823145</a> | Repository:<a href="https://github.com/40823145/cd2021">40823145</a> | Group Website:<a href="https://40823145.github.io/stage3-ag1">40823145</a></p>
<p>40823136 | Website:<a href="https://40823136.github.io/cd2021">40823136</a> | Repository:<a href="https://github.com/40823136/cd2021">40823136</a> | Group Website:<a href="https://40823136.github.io/stage3-ag1">40823136</a></p>
<p>40823109 | Website:<a href="https://40823109.github.io/cd2021">40823109</a> | Repository:<a href="https://github.com/40823109/cd2021">40823109</a> | Group Website:<a href="https://40823109.github.io/stage3-ag1">40823109</a></p>
<p>40823116 | Website:<a href="https://40823116.github.io/cd2021">40823116</a> | Repository:<a href="https://github.com/40823116/cd2021">40823116</a> | Group Website:<a href="https://40823116.github.io/stage3-ag1">40823116</a></p>
<p>40823108 | Website:<a href="https://40823108.github.io/cd2021">40823108</a> | Repository:<a href="https://github.com/40823108/cd2021">40823108</a> | Group Website:<a href="https://40823108.github.io/stage3-ag1">40823108</a></p>
<p>stage3_ag2 | <a href="https://40823151.github.io/stage3-ag2">website</a> | <a href="https://github.com/40823151/stage3-ag2">github</a></p>
<p>40823151 | Website:<a href="https://40823151.github.io/cd2021">40823151</a> | Repository:<a href="https://github.com/40823151/cd2021">40823151</a> | Group Website:<a href="https://40823151.github.io/stage3-ag2">40823151</a></p>
<p>40623121 | Website:<a href="https://40623121.github.io/cd2021">40623121</a> | Repository:<a href="https://github.com/40623121/cd2021">40623121</a> | Group Website:<a href="https://40623121.github.io/stage3-ag2">40623121</a></p>
<p>40871106 | Website:<a href="https://40871106.github.io/cd2021">40871106</a> | Repository:<a href="https://github.com/40871106/cd2021">40871106</a> | Group Website:<a href="https://40871106.github.io/stage3-ag2">40871106</a></p>
<p>40823102 | Website:<a href="https://40823102.github.io/cd2021">40823102</a> | Repository:<a href="https://github.com/40823102/cd2021">40823102</a> | Group Website:<a href="https://40823102.github.io/stage3-ag2">40823102</a></p>
<p>40823104 | Website:<a href="https://40823104.github.io/cd2021">40823104</a> | Repository:<a href="https://github.com/40823104/cd2021">40823104</a> | Group Website:<a href="https://40823104.github.io/stage3-ag2">40823104</a></p>
<p>40823106 | Website:<a href="https://40823106.github.io/cd2021">40823106</a> | Repository:<a href="https://github.com/40823106/cd2021">40823106</a> | Group Website:<a href="https://40823106.github.io/stage3-ag2">40823106</a></p>
<p>40823101 | Website:<a href="https://40823101.github.io/cd2021">40823101</a> | Repository:<a href="https://github.com/40823101/cd2021">40823101</a> | Group Website:<a href="https://40823101.github.io/stage3-ag2">40823101</a></p>
<p>40823132 | Website:<a href="https://40823132.github.io/cd2021">40823132</a> | Repository:<a href="https://github.com/40823132/cd2021">40823132</a> | Group Website:<a href="https://40823132.github.io/stage3-ag2">40823132</a></p>
<p>stage3_ag3 | <a href="https://40823119.github.io/stage3-ag3">website</a> | <a href="https://github.com/40823119/stage3-ag3">github</a></p>
<p>40823119 | Website:<a href="https://40823119.github.io/cd2021">40823119</a> | Repository:<a href="https://github.com/40823119/cd2021">40823119</a> | Group Website:<a href="https://40823119.github.io/stage3-ag3">40823119</a></p>
<p>40823150 | Website:<a href="https://40823150.github.io/cd2021">40823150</a> | Repository:<a href="https://github.com/40823150/cd2021">40823150</a> | Group Website:<a href="https://40823150.github.io/stage3-ag3">40823150</a></p>
<p>40823103 | Website:<a href="https://40823103.github.io/cd2021">40823103</a> | Repository:<a href="https://github.com/40823103/cd2021">40823103</a> | Group Website:<a href="https://40823103.github.io/stage3-ag3">40823103</a></p>
<p>40823107 | Website:<a href="https://40823107.github.io/cd2021">40823107</a> | Repository:<a href="https://github.com/40823107/cd2021">40823107</a> | Group Website:<a href="https://40823107.github.io/stage3-ag3">40823107</a></p>
<p>40523252 | Website:<a href="https://40523252.github.io/cd2021">40523252</a> | Repository:<a href="https://github.com/40523252/cd2021">40523252</a> | Group Website:<a href="https://40523252.github.io/stage3-ag3">40523252</a></p>
<p>40823154 | Website:<a href="https://40823154.github.io/cd2021">40823154</a> | Repository:<a href="https://github.com/40823154/cd2021">40823154</a> | Group Website:<a href="https://40823154.github.io/stage3-ag3">40823154</a></p>
<p>stage3_ag4 | <a href="https://40823142.github.io/stage3-ag4">website</a> | <a href="https://github.com/40823142/stage3-ag4">github</a></p>
<p>40823142 | Website:<a href="https://40823142.github.io/cd2021">40823142</a> | Repository:<a href="https://github.com/40823142/cd2021">40823142</a> | Group Website:<a href="https://40823142.github.io/stage3-ag4">40823142</a></p>
<p>40823144 | Website:<a href="https://40823144.github.io/cd2021">40823144</a> | Repository:<a href="https://github.com/40823144/cd2021">40823144</a> | Group Website:<a href="https://40823144.github.io/stage3-ag4">40823144</a></p>
<p>40823127 | Website:<a href="https://40823127.github.io/cd2021">40823127</a> | Repository:<a href="https://github.com/40823127/cd2021">40823127</a> | Group Website:<a href="https://40823127.github.io/stage3-ag4">40823127</a></p>
<p>40823148 | Website:<a href="https://40823148.github.io/cd2021">40823148</a> | Repository:<a href="https://github.com/40823148/cd2021">40823148</a> | Group Website:<a href="https://40823148.github.io/stage3-ag4">40823148</a></p>
<p>40823121 | Website:<a href="https://40823121.github.io/cd2021">40823121</a> | Repository:<a href="https://github.com/40823121/cd2021">40823121</a> | Group Website:<a href="https://40823121.github.io/stage3-ag4">40823121</a></p>
<p>40823135 | Website:<a href="https://40823135.github.io/cd2021">40823135</a> | Repository:<a href="https://github.com/40823135/cd2021">40823135</a> | Group Website:<a href="https://40823135.github.io/stage3-ag4">40823135</a></p>
<p>40823114 | Website:<a href="https://40823114.github.io/cd2021">40823114</a> | Repository:<a href="https://github.com/40823114/cd2021">40823114</a> | Group Website:<a href="https://40823114.github.io/stage3-ag4">40823114</a></p>
<p>40823146 | Website:<a href="https://40823146.github.io/cd2021">40823146</a> | Repository:<a href="https://github.com/40823146/cd2021">40823146</a> | Group Website:<a href="https://40823146.github.io/stage3-ag4">40823146</a></p>
<p>stage3_ag5 | <a href="https://40823111.github.io/stage3-ag5">website</a> | <a href="https://github.com/40823111/stage3-ag5">github</a></p>
<p>40823111 | Website:<a href="https://40823111.github.io/cd2021">40823111</a> | Repository:<a href="https://github.com/40823111/cd2021">40823111</a> | Group Website:<a href="https://40823111.github.io/stage3-ag5">40823111</a></p>
<p>40823115 | Website:<a href="https://40823115.github.io/cd2021">40823115</a> | Repository:<a href="https://github.com/40823115/cd2021">40823115</a> | Group Website:<a href="https://40823115.github.io/stage3-ag5">40823115</a></p>
<p>40823128 | Website:<a href="https://40823128.github.io/cd2021">40823128</a> | Repository:<a href="https://github.com/40823128/cd2021">40823128</a> | Group Website:<a href="https://40823128.github.io/stage3-ag5">40823128</a></p>
<p>40823120 | Website:<a href="https://40823120.github.io/cd2021">40823120</a> | Repository:<a href="https://github.com/40823120/cd2021">40823120</a> | Group Website:<a href="https://40823120.github.io/stage3-ag5">40823120</a></p>
<p>40823140 | Website:<a href="https://40823140.github.io/cd2021">40823140</a> | Repository:<a href="https://github.com/40823140/cd2021">40823140</a> | Group Website:<a href="https://40823140.github.io/stage3-ag5">40823140</a></p>
<p>40823124 | Website:<a href="https://40823124.github.io/cd2021">40823124</a> | Repository:<a href="https://github.com/40823124/cd2021">40823124</a> | Group Website:<a href="https://40823124.github.io/stage3-ag5">40823124</a></p>
<p>40823139 | Website:<a href="https://40823139.github.io/cd2021">40823139</a> | Repository:<a href="https://github.com/40823139/cd2021">40823139</a> | Group Website:<a href="https://40823139.github.io/stage3-ag5">40823139</a></p>
<p>40823126 | Website:<a href="https://40823126.github.io/cd2021">40823126</a> | Repository:<a href="https://github.com/40823126/cd2021">40823126</a> | Group Website:<a href="https://40823126.github.io/stage3-ag5">40823126</a></p>
<p>stage3_ag6 | <a href="https://40823152.github.io/stage3-ag6">website</a> | <a href="https://github.com/40823152/stage3-ag6">github</a></p>
<p>40823152 | Website:<a href="https://40823152.github.io/cd2021">40823152</a> | Repository:<a href="https://github.com/40823152/cd2021">40823152</a> | Group Website:<a href="https://40823152.github.io/stage3-ag6">40823152</a></p>
<p>40823110 | Website:<a href="https://40823110.github.io/cd2021">40823110</a> | Repository:<a href="https://github.com/40823110/cd2021">40823110</a> | Group Website:<a href="https://40823110.github.io/stage3-ag6">40823110</a></p>
<p>40823122 | Website:<a href="https://40823122.github.io/cd2021">40823122</a> | Repository:<a href="https://github.com/40823122/cd2021">40823122</a> | Group Website:<a href="https://40823122.github.io/stage3-ag6">40823122</a></p>
<p>40823125 | Website:<a href="https://40823125.github.io/cd2021">40823125</a> | Repository:<a href="https://github.com/40823125/cd2021">40823125</a> | Group Website:<a href="https://40823125.github.io/stage3-ag6">40823125</a></p>
<p>40823117 | Website:<a href="https://40823117.github.io/cd2021">40823117</a> | Repository:<a href="https://github.com/40823117/cd2021">40823117</a> | Group Website:<a href="https://40823117.github.io/stage3-ag6">40823117</a></p>
<p>40823129 | Website:<a href="https://40823129.github.io/cd2021">40823129</a> | Repository:<a href="https://github.com/40823129/cd2021">40823129</a> | Group Website:<a href="https://40823129.github.io/stage3-ag6">40823129</a></p>
<p>40823149 | Website:<a href="https://40823149.github.io/cd2021">40823149</a> | Repository:<a href="https://github.com/40823149/cd2021">40823149</a> | Group Website:<a href="https://40823149.github.io/stage3-ag6">40823149</a></p>
<p>40823153 | Website:<a href="https://40823153.github.io/cd2021">40823153</a> | Repository:<a href="https://github.com/40823153/cd2021">40823153</a> | Group Website:<a href="https://40823153.github.io/stage3-ag6">40823153</a></p>
<p>參考40823131 task1</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open("stage3_2a.txt") as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
    data = [a.replace('4823122','40823122') for a in data]
    data = [c.replace('\t\t\t\t','') for c in data]
    print(data)
#print(len(data))
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    print('&lt;p&gt;'+group[0]+' | &lt;a href="https://'+group[1]+'.github.io/stage3-ag'+group[0][9]+'"&gt;website&lt;/a&gt; | &lt;a href="https://github.com/'+group[2]+'/stage3-ag'+group[0][9]+'"&gt;github&lt;/a&gt;&lt;/p&gt;')
# the following will use group data to generate needed html

    for j in range(2,18,2):
        try:
            print('&lt;p&gt;'+group[j]+' | Website:'+'&lt;a href="https://'+group[j]+'.github.io/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+' | Repository:'+'&lt;a href="https://github.com/'+group[j]+'/cd2021'+'"&gt;'+group[j]+'&lt;/a&gt;'+' | Group Website:'+'&lt;a href="https://'+group[j]+'.github.io/stage3-ag'+group[0][9]+'"&gt;'+group[j]+'&lt;/a&gt;&lt;/p&gt;')
        except:
            continue</pre>
<h2>W15</h2>
<p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Inverse kinematics for a 2-joint robot arm using geometry</yt-formatted-string></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IKOGwoJ2HLk" width="560"></iframe></p>
<p></p>
<p>We saw this simple two-link robot in the previous lecture about forward kinematics.</p>
<p>我們在上一堂關於正向運動學的講座中看到了這個簡單的雙連桿機構。</p>
<p><span>The tooltip pose of the robot is simply described by two numbers, coordinates x and y is relative to the world coordinate system.</span></p>
<p><span>這個連桿機構是簡單用兩個數字來描述的，相對於絕對座標的ｘ和ｙ。</span></p>
<p><span>So, the problem here is that given x and y, we want to determine the joined angles, q1 and q2.</span></p>
<p><span>所以這裡的問題是當我們有了 x 和 y，我們要求出連接角 q1 和 q2。</span></p>
<p><span>The solution that we’re going to follow in this particular section is a geometric one.</span></p>
<p><span>幾何是我們在這特定部分要使用的解決方法。</span></p>
<p><span>We're going to start with a simple piece of construction.</span></p>
<p><span>我們會先從一個簡單的結構開始。</span></p>
<p><span>We’re going to overlay the red triangle on top of our robot.</span></p>
<p><span>我們要覆蓋紅色三角形在我們的機構頂部</span><span>。</span></p>
<p><span>We know that the end point coordinate is x, y, so the vertical height of the triangle is y, the horizontal width is x.</span></p>
<p><span>我們知道端點座標為x和y，因此三角形的垂直高度為y，水平寬度為x。</span></p>
<p><span>And, using Pythagoras theorem, we can write r squared equals x squared plus y squared.</span></p>
<p><span>並且，利用畢氏定理，我們可得出r的平方 = x的平方 + y的平方。</span></p>
<p><span>So far, so easy.</span></p>
<p><span>到目前為止，都很容易。</span></p>
<p>Now, we’re going to look at this triangle highlighted here in red and we want to determine</p>
<p>the angle alpha.</p>
<p>現在我們來看此處用紅色顯示的三角形，並且確定出我們想要的角度α<span>。</span></p>
<p><span>In order to do that, we need to use the cosine rule.</span></p>
<p><span>為了做到這點，我們須使用餘弦定理。</span></p>
<p><span>And, if you’re a little rusty on the cosine rule, here is a bit of a refresher.</span></p>
<p><span>如果你對餘弦定理有點不熟悉，這裡有一些複習資料。</span></p>
<p><span>We have an arbitrary triangle.</span></p>
<p><span>我們這邊有一個任意的三角形。</span></p>
<p><span>We don’t have any right angles in it and we’re going to label the length of this edge as A and the angle opposite that edge, we’re going to label as little a.</span></p>
<p>三角形中沒有任何直角，我們把這條邊的長度標為A，與這條邊相對的角，我們標記為a。</p>
<p><span>And, we do the same for this edge and this angle, and this edge and this angle.</span></p>
<p><span>並且我們對另兩邊的邊及角做相同的事。</span></p>
<p><span>So, all together, the sides are labelled capitals A, B and C, and the angles are labelled little a, little b, and little c.</span></p>
<p><span>因此，所有的邊都被標記為A,B,C，而角都被標記為a,b,c。</span></p>
<p><span>So, the cosine rule is simply this relationship here.</span></p>
<p><span>餘弦定理在這裡便以此種簡單的關係表示。</span></p>
<p><span>It’s a bit like Pythagoras’ theorem except for this extra term on the end with the cos a in it.</span></p>
<p><span>它有點類似於畢氏定理，只是在最後多了一個帶cos a的項。</span></p>
<p><span>Now, let’s apply the cosine rule to the particular triangle we looked at a moment ago.</span></p>
<p>現在，讓我們把餘弦定理用於剛才看到的那個特定三角形上。</p>
<p><span>It’s pretty straightforward to write down this particular relationship.</span></p>
<p>可以很直接地寫下此種特殊關係。</p>
<p><span>We can isolate the term cos alpha which gives us the angle alpha that we’re interested in.</span></p>
<p><span>我們可以將我們所感興趣的α角求出，需將給定的cos <span class="Y2IQFc" lang="zh-TW">α</span><span>項分離出來。</span></span></p>
<p><span>And, it’s defined in terms of the constant link lengths, A1 and A2 and the position of the end effector, x and y.</span></p>
<p><span>且它是以恆定的連桿長度A1及A2以及末端執行器位置x與y來定義的。</span></p>
<p><span>We can write this simple relationship between the angles alpha and q2.</span></p>
<p><span>我們可以寫出此種於α角和q2之間的簡單關係。</span></p>
<p><span>And, we know from the shape of the cosine function that cos of q2 must be equal to negative of cos alpha.</span></p>
<p><span>而且，我們從餘弦函數的形狀得知，cos q2須等於 -cos <span>α。</span><span> </span></span></p>
<p><span>This time, let’s just write an expression for the cosine of the joined angle q2.</span></p>
<p><span>這次，讓我們只寫出關於連接角q2的餘弦表達式。</span></p>
<p><span>Now, we’re going to draw yet another red triangle and we’re going apply some simple trigonometry here.</span></p>
<p><span>現在，我們要再畫一個紅色三角形，並在這使用一些簡單的三角函數。</span></p>
<p><span>If we know q2, then we know this length and this length of the red triangle.</span></p>
<p>如果我們知道了q2，那我們便可得紅色三角形中q2的對邊長與鄰邊長。</p>
<p><span>We can write this relationship for the sine of the joined angle q2.</span></p>
<p><span>我們可以將這種關係寫為連接角q2的正弦。</span></p>
<p><span>Now, we can consider this bigger triangle whose angle is beta and this side length of this triangle is given here in blue.</span></p>
<p><span>現在我們可以考慮更大的三角形，其角度為β，這個三角形的邊長用藍色表示。</span></p>
<p><span>And, the length of the other side of the triangle is this.</span></p>
<p>且此三角形的另一邊長是這樣表示的。</p>
<p><span>So, now we can write an expression for the angle beta in terms of these parameters here.</span></p>
<p>所以，現在我們可以用這些參數來寫出一個β角的表達式。</p>
<p><span>Going back to the red triangle that we drew earlier, we can establish a relationship between q1 and the angle beta.</span></p>
<p><span>回到稍早前我們畫的紅色三角形，我們可以在q1和β角之間建立一種關係。</span></p>
<p><span>Introduce yet another angle, this one gamma and we can write a relationship between the angle gamma and the tooltip coordinates x and y.</span></p>
<p><span>引入另一個角度<span>γ，我們可寫出γ角和工具軟件座標x和y之間的關係。</span></span></p>
<p><span>Now, we can write a simple relationship between the angles that we’ve constructed, gamma and beta and the joined angle we’re interested in which is q1.</span></p>
<p><span>現在，我們可以用建構出的角度γ,β來寫出γ角和β角與欲求之連接角q1之間的簡單關係。</span></p>
<p><span>And, the total relationship looks something like this.</span></p>
<p><span>並且整體關係看起來像這樣。</span></p>
<p><span>Quite a complex relationship, it gives us the angle of joined one, that’s q1 in terms of the end effector coordinates y and x, and a bunch of constants, a1 and a2, and it’s also a function of the second joint angle, q2.</span></p>
<p><span></span>此為相當複雜的一個關係，它提供了第一關節角q1與端點坐標y和x，以及一堆常數a1和a2，並且它也是第二關節角q2的函數。</p>
<p><span>So, let’s summarize what it is that we have derived here.</span></p>
<p><span>所以，讓我們總結一下在這裡得出的結論。</span></p>
<p><span>We have an expression for the cosine of q2 and we have an expression for q1.</span></p>
<p><span>我們有一個q2的餘弦表達式，和一個q1表達式。</span></p>
<p><span>Now, the cosine function is symmetrical about 0.</span></p>
<p><span>現在，餘弦函數在0時為對稱的。</span></p>
<p><span>So, if we know the value of the cosine of q2, then there are two possible solutions a positive angle and a negative angle.</span></p>
<p><span>所以，假如我們得知cosq2，那它便會有正角與負角兩種解。</span></p>
<p><span>We’re going to explicitly choose the positive angle. Which means that I can write this expression here.</span></p>
<p>在這裡明確的選擇正角，這意味著我可以在此處寫這個表達式。</p>
<p><span>And now, we have what we call the inverse kinematic solution for this two-link robot.</span></p>
<p><span>現在我們有了解決雙連桿機構的逆向運動學函式。</span></p>
<p>We have an expression for the two joined angles, q1 and q2 in terms of the end effector pose x and y, and a bunch of constants.</p>
<p>我們有一個對連接角q1和q2的表達式，其與末端執行器構成的x和y和一大堆常數有關。</p>
<p><span>You notice that the two equations are not independent.</span></p>
<p>你會注意到這兩個方程式並不獨立。</p>
<p><span>The equation for q1, in fact, depends on the solution for q2.</span></p>
<p><span>實際上，q1的方程式取決於q2的解。</span></p>
<p><span>In this case, q2 is negative and we’re going to write the solution for q2 with a negative sign in front of the inverse cosine.</span></p>
<p><span>在這種情況下，q2為負，因此我們要在反餘弦前加上負號來寫出q2的解。</span></p>
<p><span>Now, we need to solve for q1, so we’re going to introduce this particular red triangle, the angle beta that we solved previously, and the angle gamma which is defined in terms of y and x.</span></p>
<p><span>現在我們要求出q1的解，所以我們要引入這個特定的紅色三角形，並用之前得出的β角以及用y和x定義出的γ角。</span></p>
<p><span>Now, we write a slightly different relationship between q1, gamma and beta, different to what we had before.</span></p>
<p><span>現在，我們在q1、γ和β之間寫了一個與之前稍微不同的關係。</span></p>
<p><span>There’s a change of sign involved.</span></p>
<p><span>這涉及到符號的變化。</span></p>
<p><span>Then, we can substitute all that previous equation and come up with this expression for q1.</span></p>
<p><span>然後將先前所有的方程代入，可得出這個q1的表達式。</span></p>
<p><span>Again, there is a change of sign here.</span></p>
<p>同樣地，這裡也有一個符號的變化。</p>
<p><span>Previously, this was a negative sign.</span></p>
<p><span>在之前的式子裡，這裡是負號。</span></p>
<p><span>And, here in summary form is the solution for the inverse kinematics of our two-link robot when it is in this particular configuration, where q2 is negative.</span></p>
<p><span>這是我們使用逆向運動學於雙連桿機構在此特定構造下的解，其中q2為負值</span></p>
<p><span>Let’s compare the two solutions, the case where q2 is positive and the case where q2 is negative.</span></p>
<p><span>讓我們在q2為正以及q2為負的情況下進行兩種解法的比較。</span></p>
<p><span></span></p>
<h2>W16</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/sD5qpS44qkI" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5GKr3h38fy0" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hTsqEwRI3RY" width="560"></iframe></p>
<p></p>
<p>檔案連結:<a href="https://drive.google.com/file/d/1LTV1PTRzKuWk0qn2jBUxCcfbIQ14v11w/view?usp=sharing">https://drive.google.com/file/d/1LTV1PTRzKuWk0qn2jBUxCcfbIQ14v11w/view?usp=sharing</a></p>
<p>onshape:<a href="https://cad.onshape.com/documents/83b2b078218e306afd36b2c1/w/6e9c318a7449eeea610810f7/e/467f8494e660346b5fdebacc">https://cad.onshape.com/documents/83b2b078218e306afd36b2c1/w/6e9c318a7449eeea610810f7/e/467f8494e660346b5fdebacc</a></p><h1>About</h1>
<p>This is<span> </span><a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p>目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併.</p>
<p>使用 csave 按鈕存檔無法刪除頁面資料.</p>
<p>使用 Edit All 模式, 無法使用 csave 按鈕（尚未測試).</p>
</div>
</div>